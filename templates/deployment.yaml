apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: "{{ .Values.base.name }}"
  name: "{{ .Values.base.name }}"
spec:
  replicas: {{ .Values.base.deploy.replicaCount }}
  selector:
    matchLabels:
      app: "{{ .Values.base.name }}"
  template:
    metadata:
      labels:
        app: "{{ .Values.base.name }}"
    spec:
      containers:
        - image: "{{ .Values.base.deploy.image.repository }}:{{ .Values.base.deploy.image.tag }}"
          imagePullPolicy: IfNotPresent
          name: "{{ .Values.base.name }}"
{{- if .Values.base.deploy.port.enable }}
          ports:
            - containerPort: {{ .Values.base.deploy.port.containerPort }}
              name: {{ .Values.base.deploy.port.name }}
              protocol: {{ .Values.base.deploy.port.protocol }}
{{- end }}
{{- if and .Values.base.deploy.port.enable .Values.base.deploy.healthcheck.enable }}
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: {{ .Values.base.deploy.healthcheck.path }}
              port: {{ .Values.base.deploy.port.name }}
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 50
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: {{ .Values.base.deploy.port.name }}
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 50
{{- end }}
          {{- if or .Values.base.deploy.env .Values.base.deploy.secrets}}
          env:
          {{- range .Values.base.deploy.env }}
          - name: {{ .name }}
            value: {{ .value | quote }}
          {{- end }}
          {{- range .Values.base.deploy.secrets }}
          - name: {{ .name }}
            valueFrom:
              secretKeyRef:
                name: {{ .secret_name }}
                key: {{ .secret_key }}
          {{- end }}
          {{- end }}
          {{- if .Values.base.deploy.resources }}
          resources:
            {{- if .Values.base.deploy.resources.limits }}
            limits:
              {{- if .Values.base.deploy.resources.limits.memory }}
              memory: {{ .Values.base.deploy.resources.limits.memory | quote }}
              {{- end }}
            {{- end }}
            {{- if .Values.base.deploy.resources.requests }}
            requests:
              {{- if .Values.base.deploy.resources.requests.memory }}
              memory: {{ .Values.base.deploy.resources.requests.memory | quote }}
              {{- end }}
            {{- end }}
          {{- end }}
      dnsPolicy: ClusterFirst
      {{- if .Values.base.deploy.image.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.base.deploy.image.imagePullSecrets | quote }}
      {{- end }}
      restartPolicy: Always